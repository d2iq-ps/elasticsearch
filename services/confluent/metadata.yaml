displayName: Confluent
description: Deploy and Manage Confluent.
category:
  - My Elastic Stack
type: catalog
scope:
  - project
  - workspace
overview: |-
  # Overview
  Confluent for Kubernetes (CFK) is a cloud-native control plane for deploying and managing Confluent in your private cloud environment. It provides standard and simple interface to customize, deploy, and manage Confluent Platform through declarative API.

  CFK runs on Kubernetes, the runtime for private cloud architectures.

  Note

  CFK is the next generation of Confluent Operator. For Confluent Operator 1.x documentation, see Confluent Operator 1, or use the version picker to browse to a specific version of the documentation.

  # Features

  Cloud Native Declarative API

  Declarative Kubernetes-native API approach to configure, deploy, and manage Confluent Platform components (namely Apache KafkaÂ®, Connect workers, ksqlDB, Schema Registry, Confluent Control Center, Confluent REST Proxy) and application resources (such as topics, rolebindings) through Infrastructure as Code (IaC).

  Complete granular RBAC, authentication and TLS network encryption

  Auto-generated certificates

  Support for credential management systems, such as Hashicorp Vault, to inject sensitive configurations in memory to Confluent deployments

  Provides server properties, JVM, and Log4j configuration overrides for customization of all Confluent Platform components.

  Provides automated rolling updates for configuration changes.

  Provides automated rolling upgrades with no impact to Kafka availability.

  Provides single command, automated scaling and reliability checks of Confluent Platform.

  Restores a Kafka pod with the same Kafka broker ID, configuration, and persistent storage volumes if a failure occurs.

  Provides automated rack awareness to spread replicas of a partition across different racks (or zones), improving availability of Kafka brokers and limiting the risk of data loss.
  Scheduling

  Supports Kubernetes labels and annotations to provide useful context to DevOps teams and ecosystem tooling.

  Supports Kubernetes tolerations and pod/node affinity for efficient resource utilization and pod placement.
  Monitoring

  Supports metrics aggregation using JMX/Jolokia.

  Supports aggregated metrics export to Prometheus.

icon: PHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJMYXllcl8xIiB4bWxuczp4PSJuc19leHRlbmQ7IiB4bWxuczppPSJuc19haTsiIHhtbG5zOmdyYXBoPSJuc19ncmFwaHM7IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4PSIwcHgiIHk9IjBweCIgdmlld0JveD0iMCAwIDQzIDQzIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCA0MyA0MzsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgogPHN0eWxlIHR5cGU9InRleHQvY3NzIj4KICAuc3Qwe2ZpbGwtcnVsZTpldmVub2RkO2NsaXAtcnVsZTpldmVub2RkO2ZpbGw6IzE3MzM2MTt9CiA8L3N0eWxlPgogPG1ldGFkYXRhPgogIDxzZncgeG1sbnM9Im5zX3NmdzsiPgogICA8c2xpY2VzPgogICA8L3NsaWNlcz4KICAgPHNsaWNlU291cmNlQm91bmRzIGJvdHRvbUxlZnRPcmlnaW49InRydWUiIGhlaWdodD0iNDMiIHdpZHRoPSI0MyIgeD0iNjguNyIgeT0iLTIyMS43Ij4KICAgPC9zbGljZVNvdXJjZUJvdW5kcz4KICA8L3Nmdz4KIDwvbWV0YWRhdGE+CiA8Zz4KICA8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMzAuOCwyMi43YzEuMS0wLjEsMi4yLTAuMSwzLjMtMC4ydi0wLjhjLTEuMS0wLjEtMi4yLTAuMS0zLjMtMC4ybC0zLjMtMC4xYy0xLjktMC4xLTMuOS0wLjEtNS44LTAuMQoJCWMwLTEuOSwwLTMuOS0wLjEtNS44bC0wLjEtMy4zYy0wLjEtMS4xLTAuMS0yLjItMC4yLTMuM2gtMC45Yy0wLjEsMS4xLTAuMSwyLjItMC4yLDMuM2wtMC4xLDMuM2MwLDAuOSwwLDEuOCwwLDIuNwoJCWMtMC40LTAuOC0wLjctMS43LTEuMS0yLjVsLTEuNC0zYy0wLjUtMS0wLjktMi0xLjQtM0wxNS40LDEwYzAuNCwxLjEsMC43LDIuMSwxLjEsMy4xbDEuMiwzLjFjMC4zLDAuOSwwLjcsMS43LDEsMi42CgkJYy0wLjctMC42LTEuMy0xLjMtMi0xLjlsLTIuNC0yLjNjLTAuOC0wLjctMS42LTEuNS0yLjUtMi4ybC0wLjcsMC43YzAuNywwLjgsMS41LDEuNiwyLjIsMi41bDIuMywyLjRjMC42LDAuNywxLjMsMS4zLDEuOSwyCgkJYy0wLjgtMC4zLTEuNy0wLjctMi42LTFsLTMuMS0xLjJjLTEtMC40LTIuMS0wLjgtMy4xLTEuMWwtMC40LDAuOWMxLDAuNSwyLDAuOSwzLDEuNGwzLDEuNGMwLjgsMC40LDEuNywwLjcsMi41LDEuMQoJCWMtMC45LDAtMS44LDAtMi43LDBsLTMuMywwLjFjLTEuMSwwLjEtMi4yLDAuMS0zLjMsMC4ydjAuOWMxLjEsMC4xLDIuMiwwLjEsMy4zLDAuMmwzLjMsMC4xYzIsMC4xLDMuOSwwLjEsNS44LDAuMQoJCWMwLDEuOSwwLDMuOSwwLjEsNS44bDAuMSwzLjNjMC4xLDEuMSwwLjEsMi4yLDAuMiwzLjNoMC44YzAuMS0xLjEsMC4xLTIuMiwwLjItMy4zbDAuMS0zLjNjMC0wLjksMC0xLjksMC4xLTIuOAoJCWMwLjQsMC45LDAuNywxLjcsMS4xLDIuNmwxLjQsM2MwLjUsMSwwLjksMiwxLjQsM2wwLjgtMC4zYy0wLjMtMS4xLTAuNy0yLjEtMS4xLTMuMUwyNC4xLDI4Yy0wLjMtMC45LTAuNy0xLjctMS0yLjYKCQljMC43LDAuNywxLjMsMS4zLDIsMS45bDIuNCwyLjNjMC44LDAuNywxLjYsMS41LDIuNSwyLjJsMC42LTAuNmMtMC43LTAuOC0xLjUtMS42LTIuMi0yLjVsLTIuMy0yLjRjLTAuNi0wLjctMS4zLTEuNC0xLjktMgoJCWMwLjksMC4zLDEuNywwLjcsMi42LDFsMy4xLDEuMmMxLDAuNCwyLjEsMC44LDMuMSwxLjFsMC4zLTAuOGMtMS0wLjUtMi0xLTMtMS40bC0zLTEuNGMtMC45LTAuNC0xLjctMC44LTIuNi0xLjEKCQljMC45LDAsMS45LDAsMi44LTAuMUMyNy41LDIyLjgsMzAuOCwyMi43LDMwLjgsMjIuN3oiPgogIDwvcGF0aD4KICA8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMjEuNSw0M0M5LjYsNDMsMCwzMy40LDAsMjEuNVM5LjYsMCwyMS41LDBTNDMsOS42LDQzLDIxLjVTMzMuNCw0MywyMS41LDQzIE0yMS41LDJDMTAuOCwyLDIsMTAuOCwyLDIxLjUKCQlTMTAuOCw0MSwyMS41LDQxUzQxLDMyLjIsNDEsMjEuNVMzMi4yLDIsMjEuNSwyIj4KICA8L3BhdGg+CiA8L2c+Cjwvc3ZnPg==