Process:

1/ Build the management cluster (use script in ./clusters)
2/ Log into kommander and apply license key

SCREEN RECORD
3/ Create workspace elasticsearch, elasticsearch-workspace, confluent
4/ Add infra provider arn:aws:iam::222638339470:role/whitehouse-kommander
5/ Build a cluster in es workspace
6/ Leave recording with log highlighted

export AZURE_SUBSCRIPTION_ID="b769519a-128a-4d35-b8ab-489774db5970"
export AZURE_TENANT_ID="a98e3fd4-b172-4731-9f98-7038f712e693"
export AZURE_CLIENT_ID="10984f34-e1e0-4492-a3e2-1a526ee365a2"
export AZURE_CLIENT_SECRET="X4G8Q~ovzROJDl9Ux6rTYWIvmMbGFu6Ctpsv9aJb"


Don't show but in mgt:
Install CRDs:
kubectl create -f https://download.elastic.co/downloads/eck/2.7.0/crds.yaml
kubectl apply -f https://download.elastic.co/downloads/eck/2.7.0/operator.yaml


kubectl create -f https://raw.githubusercontent.com/confluentinc/confluent-kubernetes-examples/master/quickstart-deploy/confluent-platform.yaml

in UI

- In new namespace turn on all logging and storage stuff
8/ Create a new project called test

Install Catalogue: (MGT Cluster)
kubectl create -f ./artifacts/catalogue.yaml


Troubleshooting Catalogue:

- Github catalogue repo needs to be deployed to the management cluster. Check its health in the management cluster
- Check the following in apps.kommander.d2iq.io in the correct namespace:
    - App
    - AppDeployment

Switch context to the worker cluster:

- Check helm repos are healthy and in the right namespace (source.toolkit.fluxcd.io)
- Check git repos are healthy and in the right namespace (source.toolkit.fluxcd.io)
- Check helm releases are healthy and in the right namespace (helm.fluxcd.io)
- Check kustomizations are healthy and in the right namespace (kustomize.toolkit.fluxcd.io)
- Check helmcharts are healthy

- check helm-controller logs in kommander-flux namespace

